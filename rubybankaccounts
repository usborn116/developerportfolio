class Account
  attr_reader :name
  attr_reader :balance
  def initialize(name, balance=10)
  @name = name
  @balance = balance
  end

  private
  def pin
    @pin = 1234
  end

  private
  def pin_error
    return "Access denied: incorrect PIN."
  end

  private
  def overdraw
    return "Error. You will overdraw your account"
  end

  public
  def display_balance(pin_number)
    puts pin_number == pin ? "#{@name} Balance: $#{@balance}." : pin_error
  end

  public
  def withdraw(pin_number, amount)
    if pin_number == pin
      if amount > @balance
        puts overdraw + " by $#{amount-@balance}"
      else
        @balance -= amount
        puts "Withdrew $#{amount}. New #{@name} balance: $#{@balance}."
      end
    else
      puts pin_error
    end
  end

  public
  def deposit(pin_number, amount)
    if pin_number == pin
      @balance += amount
      puts "Deposited $#{amount}. New balance: $#{@balance}."
    else
      puts pin_error
    end
  end
end

class CheckingAccount < Account
  def initialize(name, balance=10)
  super
  end
end

class SavingsAccount < Account
  def initialize(name, balance=10)
  super
  end
end
checking = CheckingAccount.new("Usborn checking", 600)
savings = SavingsAccount.new("Usborn savings", 1000)
checking.display_balance(1234)
savings.display_balance(1234)
checking.withdraw(1234, 200)
savings.withdraw(1234, 300)
